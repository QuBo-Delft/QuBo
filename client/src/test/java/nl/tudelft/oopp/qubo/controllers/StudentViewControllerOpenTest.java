package nl.tudelft.oopp.qubo.controllers;

import javafx.stage.Stage;
import nl.tudelft.oopp.qubo.dtos.questionboard.QuestionBoardDetailsDto;
import nl.tudelft.oopp.qubo.sceneloader.SceneLoader;
import org.junit.jupiter.api.Test;
import org.testfx.api.FxAssert;
import org.testfx.api.FxRobot;
import org.testfx.framework.junit5.Start;
import org.testfx.matcher.base.NodeMatchers;
import org.testfx.matcher.base.WindowMatchers;

public class StudentViewControllerOpenTest extends TestFxBase {

    /*
        Create an open Question Board which is loaded in @Start.
     */
    QuestionBoardDetailsDto qdOpen = createOpenQuBo();

    /**
     * Initiate testing done through the TestFX library.
     *
     * @param stage Test stage created by the TestFX library.
     */
    @Start
    void start(Stage stage) {
        new SceneLoader().viewLoader(qdOpen, stage, "author", "StudentView", qdOpen.getId());
    }

    /**
     * Test whether a GetTextDialog appears and asking works when clicking the ask a question button.
     *
     * @param robot TestFX robot.
     */
    @Test
    void askQuestion(FxRobot robot) {
        robot.clickOn("#askQuestionBtn");
        // Expect a GetTextDialog to appear and take focus
        FxAssert.verifyThat(robot.window("(QuBo)"), WindowMatchers.isNotFocused());
        robot.clickOn("#inputfield");
        robot.write("Am I a helpful robot?");
        robot.clickOn("#submitbutton");
        // Expect that the question Vbox now has at least one question item in it
        FxAssert.verifyThat(robot.lookup("#unAnsQuVbox"), NodeMatchers.hasChild("#question"));
        // We expect users to be able to ask multiple questions, therefore we go through the process twice
        robot.clickOn("#askQuestionBtn");
        // Expect a GetTextDialog to appear and take focus
        FxAssert.verifyThat(robot.window("(QuBo)"), WindowMatchers.isNotFocused());
        robot.clickOn("#inputfield");
        robot.write("I sure am I hope...? [!@#$%^&*()]|~`'';");
        robot.clickOn("#submitbutton");
        // Expect that the question Vbox now has precisely two question items in it
        FxAssert.verifyThat(robot.lookup("#unAnsQuVbox"), NodeMatchers.hasChildren(2, "#question"));
    }

    /**
     * Test whether the Question Board Details pane gets shown.
     *
     * @param robot TestFX robot.
     */
    @Test
    void checkBoardInfo(FxRobot robot) {
        robot.clickOn("#boardInfo");
        // Expect the Question Board Details pane to be shown.
        FxAssert.verifyThat(robot.window("(Details)"), WindowMatchers.isShowing());
    }

    /**
     * Test whether clicking the board details button twice closes the pane.
     *
     * @param robot TestFX robot.
     */
    @Test
    void closeBoardInfo(FxRobot robot) {
        robot.clickOn("#boardInfo");
        robot.clickOn("#boardInfo");
        // Expect the regular Student View stage to be focused and therefore the Details pane not showing
        FxAssert.verifyThat(robot.window("(QuBo)"), WindowMatchers.isNotFocused());

    }

    /**
     * Click the help doc button. TODO: at method
     *
     * @param robot TestFX robot.
     */
    @Test
    void checkHelpDoc(FxRobot robot) {
        robot.clickOn("#askQuestionBtn");
        FxAssert.verifyThat(robot.window("(QuBo)"), WindowMatchers.isShowing());
    }

    /**
     * Click the hamburger to open the sidebar.
     *
     * @param robot TestFX robot.
     */
    @Test
    void openSidebar(FxRobot robot) {
        robot.clickOn("#hamburger");
        FxAssert.verifyThat("#sideMenu", NodeMatchers.isVisible());
    }

    /**
     * Click the hamburger twice to open and close the sidebar.
     *
     * @param robot TestFX robot.
     */
    @Test
    void closeSidebar(FxRobot robot) {
        robot.clickOn("#askQuestionBtn");
        FxAssert.verifyThat(robot.window("(QuBo)"), WindowMatchers.isShowing());
    }

    /**
     * Test whether the the back to home button works and directs to the correct scene.
     *
     * @param robot TestFX robot.
     */
    @Test
    void openAnsQuestionsPane(FxRobot robot) {
        robot.clickOn("#askQuestionBtn");
        FxAssert.verifyThat(robot.window("(QuBo)"), WindowMatchers.isShowing());
    }

    /**
     * Test whether the the back to home button works and directs to the correct scene.
     *
     * @param robot TestFX robot.
     */
    @Test
    void openPollsPane(FxRobot robot) {
        robot.clickOn("#askQuestionBtn");
        FxAssert.verifyThat(robot.window("(QuBo)"), WindowMatchers.isShowing());
    }

    /**
     * Test whether the the back to home button works and directs to the correct scene.
     *
     * @param robot TestFX robot.
     */
    @Test
    void verifyBoardTitle(FxRobot robot) {
        robot.clickOn("#askQuestionBtn");
        FxAssert.verifyThat(robot.window("(QuBo)"), WindowMatchers.isShowing());
    }

    /**
     * Test whether the the back to home button works and directs to the correct scene.
     *
     * @param robot TestFX robot.
     */
    @Test
    void verifyBoardStatusIconOpen(FxRobot robot) {
        robot.clickOn("#askQuestionBtn");
        FxAssert.verifyThat(robot.window("(QuBo)"), WindowMatchers.isShowing());
    }

    /**
     * Test whether the the back to home button works and directs to the correct scene.
     *
     * @param robot TestFX robot.
     */
    @Test
    void verifyBoardStatusText(FxRobot robot) {
        robot.clickOn("#askQuestionBtn");
        FxAssert.verifyThat(robot.window("(QuBo)"), WindowMatchers.isShowing());
    }

    /**
     * Test whether the the back to home button works and directs to the correct scene.
     *
     * @param robot TestFX robot.
     */
    @Test
    void clickLeaveButton(FxRobot robot) {
        robot.clickOn("#askQuestionBtn");
        FxAssert.verifyThat(robot.window("(QuBo)"), WindowMatchers.isShowing());
    }

    /**
     * Test whether the the back to home button works and directs to the correct scene.
     *
     * @param robot TestFX robot.
     */
    @Test
    void clickPaceSlow(FxRobot robot) {
        robot.clickOn("#askQuestionBtn");
        FxAssert.verifyThat(robot.window("(QuBo)"), WindowMatchers.isShowing());
    }

    /**
     * Test whether the the back to home button works and directs to the correct scene.
     *
     * @param robot TestFX robot.
     */
    @Test
    void clickPaceRight(FxRobot robot) {
        robot.clickOn("#askQuestionBtn");
        FxAssert.verifyThat(robot.window("(QuBo)"), WindowMatchers.isShowing());
    }

    /**
     * Test whether the the back to home button works and directs to the correct scene.
     *
     * @param robot TestFX robot.
     */
    @Test
    void clickPaceFast(FxRobot robot) {
        robot.clickOn("#askQuestionBtn");
        FxAssert.verifyThat(robot.window("(QuBo)"), WindowMatchers.isShowing());
    }

    /**
     * Test whether the the back to home button works and directs to the correct scene.
     *
     * @param robot TestFX robot.
     */
    @Test
    void clickTwoPaceVotes(FxRobot robot) {
        robot.clickOn("#askQuestionBtn");
        FxAssert.verifyThat(robot.window("(QuBo)"), WindowMatchers.isShowing());
    }
}
